name: Deploy Flux YAML to OCI

# Build 워크플로가 끝나면 실행
on:
  workflow_run:
    workflows: ["Build and Push App Image"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write # sed로 파일 수정 & 커밋하려면 write 필요
      packages: write # ORAS push 권한

    steps:
      - uses: actions/checkout@v4

      # 1) 새로 빌드된 이미지 SHA 태그를 k8s/deployment.yaml에 반영
      - name: Update image tag in deployment.yaml
        run: |
          sed -i "s|image: .*|image: ghcr.io/${{ github.repository }}:image-${{ github.sha }}|" k8s/deployment.yaml

      # 2) ORAS 1.1.0 설치 (OCI Artifacts 업로드용)
      - name: Install ORAS
        run: |
          curl -sLO https://github.com/oras-project/oras/releases/download/v1.1.0/oras_1.1.0_linux_amd64.tar.gz
          tar -xzf oras_1.1.0_linux_amd64.tar.gz oras
          chmod +x oras
          ./oras version

      # 3) K8s 매니페스트(=kustomization) → tar.gz 패키징
      - name: Create tar.gz of manifests
        run: |
          tar -czf flux-kustomize.tar.gz -C k8s .

      # 4) ORAS 로그인 (GHCR)
      - name: Login to GHCR for ORAS
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | ./oras login ghcr.io -u ${{ github.actor }} --password-stdin

      # 5) 패키징한 매니페스트를 OCI Artifact로 Push
      - name: Push manifests via ORAS
        run: |
          ./oras push ghcr.io/${{ github.repository }}:kustomize-latest \
            --artifact-type application/vnd.cncf.flux.kustomize.layer.v1 \
            flux-kustomize.tar.gz:application/gzip

      # 6) 로컬 파일 정리 (선택)
      - name: Clean up
        run: rm -f flux-kustomize.tar.gz
